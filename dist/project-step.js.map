{"version":3,"file":"project-step.js","sourceRoot":"","sources":["../src/project-step.ts"],"names":[],"mappings":";;AAAA,mCAAkC;AAIlC;IAQI,qBAAY,IAAY,EAAE,YAAoB;QAHvC,cAAS,GAA2B,IAAI,KAAK,EAAmB,CAAC;QACjE,gBAAW,GAA8B,IAAI,KAAK,EAAsB,CAAC;QAG5E,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;QACjC,IAAI,CAAC,MAAM,GAAG,eAAM,CAAC,UAAU,CAAC;IACpC,CAAC;IAEM,iCAAW,GAAlB;QACI,OAAO,IAAI,CAAC,MAAM,KAAK,eAAM,CAAC,UAAU;eACjC,IAAI,CAAC,MAAM,KAAK,eAAM,CAAC,QAAQ;eAC/B,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC;IACrC,CAAC;IAED;;;OAGG;IACW,yBAAa,GAA3B,UAA4B,WAAwB;QAAE,qBAAoC;aAApC,UAAoC,EAApC,qBAAoC,EAApC,IAAoC;YAApC,oCAAoC;;QACtF,IAAI,iBAAiB,GAAY,IAAI,CAAC;QAEtC,KAAiB,UAAW,EAAX,2BAAW,EAAX,yBAAW,EAAX,IAAW,EAAE;YAAzB,IAAI,IAAI,oBAAA;YACT,iBAAiB,GAAG,CAAC,CAAC,WAAW,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,iBAAiB,CAAC;SACrF;QAED,OAAO,iBAAiB,CAAC;IAC7B,CAAC;IACL,kBAAC;AAAD,CAAC,AAjCD,IAiCC;AAjCY,kCAAW","sourcesContent":["import { Status } from './status';\r\nimport { ProjectDocument } from './project-document';\r\nimport { ProjectPermissions } from './project-permissions';\r\n\r\nexport class ProjectStep {\r\n    public _id: string;\r\n    public name: string;\r\n    public friendlyName: string;\r\n    public status: Status;\r\n    public documents: Array<ProjectDocument> = new Array<ProjectDocument>();\r\n    public permissions: Array<ProjectPermissions> = new Array<ProjectPermissions>();\r\n\r\n    constructor(name: string, friendlyName: string) {\r\n        this.name = name;\r\n        this.friendlyName = friendlyName;\r\n        this.status = Status.notStarted;\r\n    }\r\n\r\n    public isActivated(): boolean {\r\n        return this.status === Status.inProgress\r\n            || this.status === Status.complete\r\n            || this.documents.length > 0;\r\n    }\r\n\r\n    /**\r\n     * Returns true or false whether the step/user has the specified permissions.\r\n     * @param permissions  - An array of permission to check for, a user/step must have all the specified permissions or it's false.\r\n     */\r\n    public static hasPermission(projectStep: ProjectStep, ...permissions: ProjectPermissions[]): boolean {\r\n        let stepHasPermission: boolean = true;\r\n\r\n        for (let perm of permissions) {\r\n            stepHasPermission = !!projectStep.permissions.includes(perm) && stepHasPermission;\r\n        }\r\n\r\n        return stepHasPermission;\r\n    }\r\n}"]}