{"version":3,"file":"sorted-api-request.js","sourceRoot":"","sources":["../../src/base-api/sorted-api-request.ts"],"names":[],"mappings":";;;AAAA,6CAA2C;AAE3C;IAAsC,4CAAU;IAG5C,0BAAY,IAAa;QAAzB,YACI,iBAAO,SAEV;QADG,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC;;IACrB,CAAC;IAED,gFAAgF;IAChF;;;;OAIG;IACI,kCAAO,GAAd,UAAe,QAAiB,EAAE,SAAkB;QAChD,IAAI,CAAC,SAAS,EAAE;YACZ,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,CAAC;SACtB;aAAM,IAAI,SAAS,KAAK,MAAM,EAAE;YAC7B,IAAI,CAAC,IAAI,GAAG,MAAI,QAAU,CAAC;SAC9B;aACI;YACD,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC;SACxB;IACL,CAAC;IACL,uBAAC;AAAD,CAAC,AAxBD,CAAsC,wBAAU,GAwB/C;AAxBY,4CAAgB","sourcesContent":["import { ApiRequest } from './api-request';\r\n\r\nexport class SortedApiRequest extends ApiRequest {\r\n    public sort?: string;\r\n\r\n    constructor(sort?: string) {\r\n        super();\r\n        this.sort = sort;\r\n    }\r\n\r\n    // TODO: Make sort array so it supports multiple sorts (serverside already does)\r\n    /**\r\n     * Sets the sort of the ApiRequested with the specified property and direction. \r\n     * Default direction is Ascending if none is provided.\r\n     * Sending an undefined or null property will also clear the current sort.\r\n     */\r\n    public setSort(property?: string, direction?: string) {\r\n        if (!direction) {\r\n            this.sort = void 0;\r\n        } else if (direction === 'desc') {\r\n            this.sort = `-${property}`;\r\n        }\r\n        else {\r\n            this.sort = property;\r\n        }\r\n    }\r\n}"]}